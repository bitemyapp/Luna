----------------------------------------------------
-- Example of a simple program: the fibonacci sequence
----------------------------------------------------

fibs[0]           := 0
fibs[1]           := 1
fibs[n_?IntegerQ] := fibs[n - 1] + fibs[n - 2]

----------------------------------------------------
-- Predicates
----------------------------------------------------

BooleanQ[True]  := True
BooleanQ[False] := True
BooleanQ[x_]    := False

NotSameQ[x_, y_] := Not[SameQ[x, y]]

----------------------------------------------------
-- Mathematical operations
----------------------------------------------------

-- We define negation, subtraction, and division in terms of other operators
-- to keep things simple
Negate[x_] := -1 * x
Subtract[x_, y_] := x + -1 * y
Divide[x_, y_] := x * y ^ -1

-- Simplification
-- Addition
Simplify[0 + x_] := x
Simplify[x_ + 0] := x
Simplify[x_ + x_] := 2 * x
Simplify[(y_ * x_) + x_] := (y + 1) * x
Simplify[(x_ * y_) + x_] := (y + 1) * x
Simplify[x_ + (y_ * x_)] := (y + 1) * x
Simplify[x_ + (x_ * y_)] := (y + 1) * x

-- Multiplication
Simplify[x_ * 0] := 0
Simplify[0 * x_] := 0

-- Spit out what we cant simplify
Simplify[x_] := x

----------------------------------------------------
-- Logic operations
----------------------------------------------------

If[True, x_, y_]  := x
If[False, x_, y_] := y

If[True, x_, y_, u_]       := x
If[False, x_, y_, u_]      := y
If[condition_, x_, y_, u_] := u

And[True, x_]  := x
And[x_, True]  := x
And[False, x_] := False
And[x_, False] := False

Or[True, x_]  := True
Or[x_, True]  := True
Or[False, x_] := x
Or[x_, False] := x

Not[True]  := False
Not[False] := True

Implies[True, x_]  := x
Implies[False, x_] := True
